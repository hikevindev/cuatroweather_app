// import React, { PropsWithChildren } from 'react';
// import { render } from '@testing-library/react';
// import type { RenderOptions } from '@testing-library/react';
// import { configureStore } from '@reduxjs/toolkit';
// import { Provider } from 'react-redux';

// import type { AppStore, RootState } from '../redux/store';
// import { setupStore } from '../redux/store';

// import weatherReducer from '../redux/slices/weatherSlice';
// import forecastReducer from '../redux/slices/forecastSlice';
// import sessionReducer from '../redux/slices/sessionSlice';

// interface ExtendedRenderOptions extends Omit<RenderOptions, 'queries'> {
//   preloadState?: Partial<RootState>;
//   store?: AppStore;
// }

// export function renderWithProviders(
//   ui: React.ReactElement,
//   ExtendedRenderOptions: ExtendedRenderOptions = {}
// ) {
//   const { preloadState = {}, store = setupStore(preloadState) } =
//     ExtendedRenderOptions;

//   const Wrapper = ({ children }: PropsWithChildren) => (
//     <Provider store={store}>{children}</Provider>
//   );

//   return {
//     store,
//     ...render(ui, { wrapper: Wrapper }),
//   };
// }
